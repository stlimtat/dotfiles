[alias]
  # Setting up a brand new branch with abnormal branching name
  abnormal = "!f() { git checkout -b \"assweet/pr/$1\" 2> /dev/null || git checkout \"assweet/pr/$1\"; }; f"
  # List aliases
  aliases = config --get-regexp alias
  # Amend the currently staged files to the latest commit
  amend = commit --amend --reuse-message=HEAD
  # Clone a repository including all submodules
  c = clone --recursive
  # Commit all changes
  ca = !git add -A && git commit -av
  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
  # `git di $number` shows the diff between the state `$number` revisions ago and the current state
  di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
  # View abbreviated SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 20 --graph --abbrev-commit
  # View the current working tree status using the short format
  s = status -s
  # Pull in remote changes for the current repository and all its submodules
  p = git pull --recurse-submodules
  # Push to remote
  po = !git push --force --set-upstream origin $(git branch | grep \\* | cut -d ' ' -f2)

[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix
[core]
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  # Treat spaces before tabs and all kinds of trailing whitespace as an error
  # [default] trailing-space: looks for spaces at the end of a line
  # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
  whitespace = space-before-tab,-indent-with-non-tab,trailing-space
  # Make `git rebase` safer on macOS
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false
  # Text viewer for use by Git commands (e.g., less).
  pager = "less -FSX"
  # Prevent showing files whose names contain non-ASCII symbols as unversioned.
  # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
  precomposeunicode = false
  # Speed up commands involving untracked files such as `git status`.
  # https://git-scm.com/docs/git-update-index#_untracked_cache
  untrackedCache = true
[color]
  # Use colors in Git commands that are capable of colored output when
  # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
  ui = auto
[commit]
  # https://help.github.com/articles/signing-commits-using-gpg/
  gpgsign = false
  # template = /Users/st_lim/.gitmsg.txt

[diff]
  # Detect copies as well as renames
  renames = copies
[diff "bin"]
  # Use `hexdump` to diff binary files
  textconv = hexdump -v -C
[help]
  # Automatically correct and execute mistyped commands
  autocorrect = 1
[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = true
[push]
  # https://git-scm.com/docs/git-config#git-config-pushdefault
  default = simple
  # Make `git push` push relevant annotated tags when pushing branches out.
  followTags = true
# URL shorthands
[url "git@github.com:"]
    # Personal Access Token - ff400df05163d1969c39696cc5caf1b852cb64e9
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf = "gist:"
[user]
	name = Lim Swee Tat
	email = sweetat@withevo.com
	signingkey = EE1EF39C32152053
[credential]
  helper = osxkeychain
[pull]
  rebase = false
[gpg]
  program = smimesign
  format = x509
