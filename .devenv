#!/bin/zsh
#set -x
# Android NDK Home
export ANDROID_NDK_HOME="/usr/local/share/android-ndk"

# For gvm
start_time=$(gdate +%s%3N)
echo "Running ${HOME}/.gvm/scripts/gvm...${start_time}ms"
source ${HOME}/.gvm/scripts/gvm
end_time=$(gdate +%s%3N)
time_taken=$((end_time - start_time))
echo "Running ${HOME}/.gvm/scripts/gvm...${end_time}ms...${time_taken}ms...Done"

# For jediterm - intellij terminal
if [ "$TERMINAL_EMULATOR" != "JetBrains-JediTerm" ]; then
  export ZSH_TMUX_AUTOSTART=true
else
  export PROMPT_COMMAND="resize &>/dev/null ; $PROMPT_COMMAND"
fi

# Using jenv
start_time=$(gdate +%s%3N)
echo "Running /usr/local/bin/jenv...${start_time}ms"
export JAVA_HOME=$(/usr/local/bin/jenv javahome)
alias jenv_prompt_info="jenv version-name"
eval "$(/usr/local/bin/jenv init - ${SHELL})"
end_time=$(gdate +%s%3N)
time_taken=$((end_time - start_time))
echo "Running /usr/local/bin/jenv...${end_time}ms...${time_taken}ms...Done"

# Using kubectl
export KUBECTL_EXTERNAL_DIFF="colordiff -N -u"

## Using lunarvim
# export LUNARVIM_RUNTIME_DIR="${LUNARVIM_RUNTIME_DIR:-"$HOME/.local/share/lunarvim"}"
# export LUNARVIM_CONFIG_DIR="${LUNARVIM_CONFIG_DIR:-"$HOME/.config/lvim"}"
# export LUNARVIM_CACHE_DIR="${LUNARVIM_CACHE_DIR:-"$HOME/.cache/lvim"}"

# Using nvm
start_time=$(gdate +%s%3N)
echo "Running nvm...${start_time}ms"
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && source "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
end_time=$(gdate +%s%3N)
time_taken=$((end_time - start_time))
echo "Running nvm...${end_time}ms...${time_taken}ms...Done"

# pnpm
export PNPM_HOME="/Users/st_lim/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end

# Using pyenv
start_time=$(gdate +%s%3N)
echo "Running pyenv...${start_time}ms"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
end_time=$(gdate +%s%3N)
time_taken=$((end_time - start_time))
echo "Running pyenv...${end_time}ms...${time_taken}ms...Done"

# For rbenv
# eval "$(/usr/local/bin/rbenv init - )"

# iterm2 shell integration
test -e "${HOME}/.iterm2_shell_integration.$(basename $SHELL)" && source "${HOME}/.iterm2_shell_integration.$(basename $SHELL)"

# aws-vault completion
eval "$(aws-vault --completion-script-zsh)"
export AWS_SESSION_TOKEN_TTL=6h
export AWS_ASSUME_ROLE_TTL=6h
export AWS_MIN_TTL=6h

# Map caps lock to delete-backspace
# https://apple.stackexchange.com/questions/7231/how-can-i-rebind-caps-lock-to-delete-backspace
hidutil property --set '{"UserKeyMapping":[{"HIDKeyboardModifierMappingSrc":0x700000039,"HIDKeyboardModifierMappingDst":0x70000002A}]}' >/dev/null 2>&1
tabs -2
