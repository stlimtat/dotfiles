#!/usr/bin/env zsh
# .abnormal
export SOURCE=${HOME}/dev/source

# Abnormal
export ABNORMAL_USER=slim
export ABSEC_CLOUD=aws
export ABSEC_ENV=prod
export ABSEC_IDENTITY="aid://user/slim"
export ABSEC_PART=management
export ABSEC_REGION=us-east-1
export INFRA=${HOME}/dev/infrastructure
export GOFLAGS="-tags=dynamic"
# Stop Terraform from barfing on ARM Macbooks
export GODEBUG=asyncpreemptoff=1
export MTLS_HOME=${HOME}/.mtls/user
export PKG_CONFIG_PATH=$(brew --prefix openssl@1.1)/lib/pkgconfig
export STORAGE_ACCOUNT_URL="https://abnormaldataneu.blob.core.windows.net"
export TERRAGRUNT_SOURCE_MAP="git::ssh://git@github.com/abnormal-security/infrastructure-modules.git=${HOME}/dev/infrastructure-modules"
export TERRAGRUNT_SOURCE_UPDATE=true
export VENV=${HOME}/dev/venv-next

# copilot
start_time=$(gdate +%s%3N)
eval "$(gh copilot alias -- zsh)"
end_time=$(gdate +%s%3N)
time_taken=$((end_time - start_time))
echo "Load copilot...${time_taken}ms...Done"

# abnormal/tools/bash/prelude
start_time=$(gdate +%s%3N)
source ${SOURCE}/tools/bash/prelude.sh
if [[ "$(python -c 'import sys;print(sys.version_info[:2])')" == "(3, 11)" ]]
then 
  echo "Load spark_home..."
  export SPARK_HOME=${VENV}/lib/python3.11/site-packages/pyspark
  export PATH=${SPARK_HOME}/bin:${PATH}
fi
end_time=$(gdate +%s%3N)
time_taken=$((end_time - start_time))
echo "Load abnormal/tools/bash/prelude...${time_taken}ms...Done"

# venv-activate
start_time=$(gdate +%s%3N)
if [[ "$VIRTUAL_ENV" != "" ]]
then
  echo "Load venv-activate......deactivate"
  deactivate 2>&1
fi
if [[ "$VIRTUAL_ENV" == "" ]]
then
  echo "Load venv-activate......activate"
  source ${SOURCE}/tools/dev/venv-activate 2>&1
fi
end_time=$(gdate +%s%3N)
time_taken=$((end_time - start_time))
echo "Load venv-activate...${time_taken}ms...Done"
# AWS_PROFILE must be set after bash_includes
export AWS_PROFILE=absec-mgmt-ops

# Unwanted Mail env
export UNWANTEDMAIL_SERVICE_ENV=staging
export HOSTING_DOMAIN=aws
export KAFKA_CACERT_PATH=$VENV/lib/python3.8/site-packages/certifi/cacert.pem

LD_LIBRARY_PATH=/usr/local/opt/openssl/lib:${LD_LIBRARY_PATH}
CPATH=/usr/local/opt/openssl/include:${CPATH}
PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig:${PKG_CONFIG_PATH}
export LD_LIBRARY_PATH CPATH PKG_CONFIG_PATH
