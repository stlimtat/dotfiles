# Not in the repository, to prevent people from accidentally committing under my name
GIT_AUTHOR_NAME="Lim Swee Tat"
GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
git config --global user.name "$GIT_AUTHOR_NAME"
GIT_AUTHOR_EMAIL="sweetat@withevo.com"
GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"
git config --global user.email "$GIT_AUTHOR_EMAIL"
export HOMEBREW_GITHUB_API_TOKEN=""
git config --global user.signingkey EE1EF39C32152053


#set -x
# Android NDK Home
export ANDROID_NDK_HOME="/usr/local/share/android-ndk"

# Using nvm
export NVM_DIR="$HOME/.nvm"
. "/usr/local/opt/nvm/nvm.sh"

# For gvm
source $HOME/.gvm/scripts/gvm

# Using jenv
eval "$(/usr/local/bin/jenv init - ${SHELL})"
export JAVA_HOME=$(/usr/local/bin/jenv javahome)
alias jenv_prompt_info="jenv version-name"

# Using pyenv
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# For rbenv
# eval "$(/usr/local/bin/rbenv init - )"

# For jediterm - intellij terminal
if [ "$TERMINAL_EMULATOR" != "JetBrains-JediTerm" ]
then 
  export ZSH_TMUX_AUTOSTART=true
else
  export PROMPT_COMMAND="resize &>/dev/null ; $PROMPT_COMMAND"
fi


# iterm2 shell integration
test -e "${HOME}/.iterm2_shell_integration.$(basename $SHELL)" && source "${HOME}/.iterm2_shell_integration.$(basename $SHELL)"

# Map caps lock to delete-backspace
# https://apple.stackexchange.com/questions/7231/how-can-i-rebind-caps-lock-to-delete-backspace
hidutil property --set '{"UserKeyMapping":[{"HIDKeyboardModifierMappingSrc":0x700000039,"HIDKeyboardModifierMappingDst":0x70000002A}]}' > /dev/null 2>&1
tabs -2

unset -f diff > /dev/null 2>&1

export PYENV_VENV=3.8.8/envs/abnormal
export SOURCE=${HOME}/source
export VENV=$(pyenv prefix $PYENV_VENV)
pyenv activate $PYENV_VENV
. ${SOURCE}/tools/dev/common_bash_includes

export CHRONOSPHERE_API_TOKEN=e6a8d4620877a9d845c1ee07673e1162b1fc6dc451c92ef595da26613a77bee0
export CHRONOSPHERE_ORG_NAME=abnormal

# export KUBECONFIG="$SOURCE/ops/kubernetes/azure/prod/configurations/kubelogin_config_deploy.yaml"
export AWS_PROFILE=absec-mgmt
export DATABRICKS_AWS_TOKEN=dapia607e9ea91f04633998ae6bc9e0dd9fd 
export MANAGED_IDENTITY_CLIENT_ID="97121047-5626-4493-a9df-ee73178e98d5"
export MTLS_HOME=${HOME}/.mtls/user
export STORAGE_ACCOUNT_URL="https://abnormaldataneu.blob.core.windows.net"

# in bash_profile
broadcast_to_airflow_onboarding_workers() {
  BROADCAST_COMMAND="\"$1\""
  echo "Broadcasting command: $BROADCAST_COMMAND"

  output_file="/tmp/broadcast_output.txt"
  echo "" > $output_file
  tail -f $output_file &
  # for IP_ADDRESS in "space-separated recipient IP addresses"
  for IP_ADDRESS in $(airflow_onboarding_worker_ips)
  do
    echo $IP_ADDRESS >> $output_file
    echo "ssh -t $IP_ADDRESS \"docker exec -it \\\$(docker container ps -f name=airflow-worker | sed -n '2 p' | cut -f1 -d' ' ) /bin/bash -c -i $BROADCAST_COMMAND\""
    ssh -t $IP_ADDRESS "docker exec -it \$(docker container ps -f name=airflow-worker | sed -n '2 p' | cut -f1 -d' ' ) /bin/bash -c -i $BROADCAST_COMMAND" >> $output_file
    echo "##################################################" >> $output_file
  done
  fg
}

